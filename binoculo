#!/bin/bash

# Define color codes for messages
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

NETWORK_NAME="binoculo-network"
MEILISEARCH_CONTAINER="meilisearch"
DASHBOARD_CONTAINER="binoculo-dashboard"
DOCKER_IMAGE="ghcr.io/girorme/binoculo:main"
DASHBOARD_DOCKER_IMAGE="ghcr.io/girorme/binoculo-dashboard:main"

# Build binoculo locally (needs elixir >= 1.14)
build_tool() {
    echo -e "${YELLOW}Building binoculo...${NC}"
    # Perform the build process here
    MIX_ENV=prod mix escript.build
    echo -e "${GREEN}binoculo build complete.${NC}"
}

start_dashboard() {
    # Check if the dashboard container is already running
    if docker ps --format '{{.Names}}' | grep -q "$DASHBOARD_CONTAINER"; then
        echo -e "${GREEN}Binoculo dashboard is already running.${NC}"
    else
        # Run Meilisearch container if it's not running
        docker rm $DASHBOARD_CONTAINER
        echo -e "${YELLOW}Starting binoculo dashboard container...${NC}"
        docker run -d --name $DASHBOARD_CONTAINER --network $NETWORK_NAME -p 3000:1234 $DASHBOARD_DOCKER_IMAGE
        echo -e "${GREEN}Dashboard started.${NC}"
    fi
}

start_meilisearch() {
    # Check if the meilisearch container is already running
    if docker ps --format '{{.Names}}' | grep -q "$MEILISEARCH_CONTAINER"; then
        echo -e "${GREEN}Meilisearch is already running.${NC}"
    else
        # Run Meilisearch container if it's not running
        docker rm $MEILISEARCH_CONTAINER
        echo -e "${YELLOW}Starting Meilisearch container...${NC}"
        docker run -d --name $MEILISEARCH_CONTAINER --network $NETWORK_NAME -p 7700:7700 -v "$(pwd)/meili_data:/meili_data" getmeili/meilisearch:v1.1
        echo -e "${GREEN}Meilisearch started.${NC}"
    fi
}

# Update binoculo docker image
update() {
    echo -e "${YELLOW}Updating binoculo...${NC}"
    docker pull $DOCKER_IMAGE
    echo -e "${GREEN}binoculo updated.${NC}"
}

# Check if the flag for build is passed
if [[ "$1" == "-b" ]]; then
    build_tool
    exit 0
fi

if [[ "$1" == "-u" ]]; then
    update
    exit 0
fi

if [[ "$1" == "--meili" ]]; then
    start_meilisearch
    shift
fi

if [[ "$1" == "--dashboard" ]]; then
    start_meilisearch
    start_dashboard
    shift
fi

# Check if the network exists
if ! docker network inspect $NETWORK_NAME &> /dev/null; then
    # Create the Docker network
    echo -e "${YELLOW}Creating network: $NETWORK_NAME${NC}"
    docker network create $NETWORK_NAME
fi

# Run your tool container linked to the same network with user-provided arguments
echo -e "${YELLOW}Launching binoculo via docker${NC}"

docker run --name binoculo --rm --network $NETWORK_NAME -v $(pwd)/output:/app/output --env-file ./.env $DOCKER_IMAGE "$@"

echo -e "${GREEN}Binoculo execution completed.${NC}"